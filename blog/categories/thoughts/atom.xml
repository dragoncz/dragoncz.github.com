<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: thoughts | Simple]]></title>
  <link href="http://dragoncz.github.com/blog/categories/thoughts/atom.xml" rel="self"/>
  <link href="http://dragoncz.github.com/"/>
  <updated>2013-01-21T14:24:06+08:00</updated>
  <id>http://dragoncz.github.com/</id>
  <author>
    <name><![CDATA[dragoncz]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Enterprise]]></title>
    <link href="http://dragoncz.github.com/blog/2012/12/10/enterprise/"/>
    <updated>2012-12-10T17:29:00+08:00</updated>
    <id>http://dragoncz.github.com/blog/2012/12/10/enterprise</id>
    <content type="html"><![CDATA[<p><code>Enterprise</code>, 进取号。也就是 <a href="http://en.wikipedia.org/wiki/Star_Trek" title="Star Trek Wikipedia"><code>Star Trek</code></a> 「星际迷航」里的 <a href="http://en.wikipedia.org/wiki/Starship_Enterprise" title="Starship: Enterprise">USS Enterprise</a>.</p>

<p><img src="http://upload.wikimedia.org/wikipedia/en/1/1a/USS_Enterprise_%28NCC-1701%29%2C_ENT1231.jpg" title="USS Enterprise (NCC-1701)" alt="Starship Enterprise" /></p>

<p>最近把星际迷航翻出来看了看，感叹上世纪80年代的电影也能满足科幻迷的胃口。尤其是<a href="http://en.wikipedia.org/wiki/Star_Trek:_The_Motion_Picture" title="Star Trek: The Motion Picture">第一集</a>，讲一个在漫漫宇宙飘荡过程中产生了自我意识的卫星，"a living machine", 不远万里来找寻它的创造者。是啊，生命的定义也许并不是那么狭隘，一个由蜜蜂组成的蜂群，整体来看具有自己的意识，那么这个整体不也是生命么？那么，一个由很多星球组成的星系呢？宇宙本身呢？</p>

<!-- more -->


<p>如果宇宙本身是个生命系统，那么人类又是个什么样的存在呢？说到这里，我不禁想到了这个图：</p>

<p><img src="http://d.pr/i/NwHd+" title="Ouroboros" alt="Ouroboros" /></p>

<p>这里又能联想到，无限大和无限小之间的距离，是不是在某一处，也像这样衔接在一起了呢，宇宙的边缘。。。
科幻电影令人着迷的地方就是这个，引发你自己的想象，太有趣了。</p>

<h2>Enterprise</h2>

<p>说到 <code>Enterprise</code>，不由自主会想到现如今更广泛被熟知的定义：<strong>企业</strong>。企业是啥呢？</p>

<blockquote><p>A business (also known as enterprise or firm) is an organization engaged in the trade of goods, services, or both to consumers. <a href="http://en.wikipedia.org/wiki/Business" title="Wikipedia: Business">Wikipedia</a></p></blockquote>

<p>我就在想啊，如果把经济比作一个互联网，那么一个企业可能就是里面的某一个路由，资源也就是里面的数据，数据在互联网里流动，总会经过一个个的路由。这样想的话，资源从企业经过就是资源重新整合分配。在经济的世界里，还有个重要的概念是价值。资源的流动产生价值，在企业里重整分配也要产生价值。</p>

<h3>路由</h3>

<p>路由是可以决定数据的走向的，可以丢弃、转移数据。试想一下，如果一个路由器，总是把发往这里的所有数据全部丢弃（吞掉），那毫无疑问它作为一个路由器已经失去了存在的意义，不遵守游戏规则必然会被规则抛弃，于是数据都不往这里走了，这个路由器只能抱着之前吞掉的数据逐渐消失了。</p>

<h3>企业</h3>

<p>经济世界何其相似啊，企业也好，团队也好，资源流向自己之后，想着全部收入囊中，无视客户，或者不顾虑周边其他企业，那么长远来与自己也是不好的。</p>

<h3>价值</h3>

<p>资源流动起来才能有价值，而要资源流动起来，那你就得输出资源，丰富这个生态圈。这当然还有量的问题，可是问题是好多好多企业连质还没搞定，还谈啥量啊。。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Web and Layers]]></title>
    <link href="http://dragoncz.github.com/blog/2012/05/06/web-and-layers/"/>
    <updated>2012-05-06T17:58:00+08:00</updated>
    <id>http://dragoncz.github.com/blog/2012/05/06/web-and-layers</id>
    <content type="html"><![CDATA[<p>最近看到几篇文章，<a href="http://www.36kr.com/p/106076.html" title="Facebook 的开放世界">一篇提到</a> Facebook 正“试图成为所有应用的社交层，就像 Google 试图成为 Google 所有产品的社交层一样”。还有一篇提到，<a href="http://www.technologyreview.com/web/39653/" title="Dropbox: Founder Drew Houston Simplifies the Cloud">Dropbox 老大说</a>，Dropbox 不是一个简单的网盘，它的最终目标应该是成为“互联网的文件系统”，换句话说，Dropbox 想成为所有互联网应用的 <code>存储层</code>。</p>

<blockquote><p>"Over the next years you're going to see that the value that comes out of Dropbox is more and more the stuff that other people build. Whether it's your TV or your camera or the apps on your phone, we want to make it easy for anything that consumes or creates data to be able to plug in. What we're really trying to build is the Internet's file system." <a href="http://www.technologyreview.com/web/39653/" title="Dropbox: Founder Drew Houston Simplifies the Cloud">Drew Houston</a></p></blockquote>

<!-- more -->


<p>我不禁想，以后的互联网应用或者说服务真的可以层次化，就像层次化的互联网七层协议，模块化的编程语言，正如这些复杂工程背后的哲学一样，互联网本身也可以模块化，层次化。</p>

<p>能够想到的几点好处：</p>

<ul>
<li>当开发应用的时候，你可以专注与你要提供的那部分功能，当你想提供社交功能和读存数据的时候，可以用社交层和存储层提供的功能。</li>
<li>那么你开发的这个应用可能就算做 <code>应用层</code>，就像网络协议的 Internet 服务，Email 服务归属于应用层一样。</li>
<li>每一层都有自己的功能和责任，可以和上层，下层交互。</li>
<li>每一层都可以释放一些不必要的顾虑，不必花费经历去研究其他层功能的细节，直接使用规范化的接口，比如 <code>API</code>。</li>
<li>互联网应用的开发效率带来提高</li>
</ul>


<p>其实想起来，这也算是各种 API 的进化概念，如果有一个整体的框架，或者说体系来约束互联网应用，肯定可以带来好处，说不定还能解决让人苦恼的客户需求问题。</p>
]]></content>
  </entry>
  
</feed>

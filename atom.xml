<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Simple]]></title>
  <link href="http://dragoncz.github.com/atom.xml" rel="self"/>
  <link href="http://dragoncz.github.com/"/>
  <updated>2013-06-29T01:14:45+08:00</updated>
  <id>http://dragoncz.github.com/</id>
  <author>
    <name><![CDATA[dragoncz]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[朋友]]></title>
    <link href="http://dragoncz.github.com/blog/2013/06/26/peng-you/"/>
    <updated>2013-06-26T02:23:00+08:00</updated>
    <id>http://dragoncz.github.com/blog/2013/06/26/peng-you</id>
    <content type="html"><![CDATA[<p>一向对韩国综艺节目和偶像团体不感冒的我，这两天竟然连续看了好多集 Super Junior 的「人体探险队」。原因不在讨论之列，就记录下看了以前从来不看的节目之后的一些新想法。</p>

<p>主题嘛，前面讲了感情，这次正好讲友情。因为这个娱乐节目就我目前观看进度，只有 2007 年的 <a href="http://v.youku.com/v_show/id_XMTYwNTY4Mzky.html" title="优酷">071230</a> 期是不纯搞笑的，我在里面看到了纯洁的友情。</p>

<h2>友情</h2>

<p>对于人这个感情动物，友情的重要性不言而喻。可人们总在抱怨自己得不到想要的朋友，就像得不到想要的爱情一样。 对于这样的抱怨，我信奉最简单最原始的一句话，「用心交朋友」。</p>

<!-- more -->


<h3>物以类聚人以群分</h3>

<p>人的感情复杂，也简单。内心决定一切，人们愿意为了两人之间的感情用多少心，决定了这段友情的性质。人们内心对这段友情的态度，可能在刚刚见面的一瞬间就决定了，甚至完全无意识；也可能在之后的相处过程中逐渐改变，同样无意识。人们虽然用语言、文字、影像等各种媒介交流，但是其实都是展露内心想法，换句话说都是内心的变相交流。交流意味着双向，人们付出多少真心，同样也会收获多少真心，这一定是趋向于平衡的。所以付出全部真心的，遇到的也会是真心朋友；付出一半真心一半假意的，遇到的也同样是半斤八两；虚心假意的遇到的必然也是虚心假意。这也是我对「物以类聚人以群分」这句话的理解。</p>

<h2>怎样获得真正友情</h2>

<p>了解上面的话，那么这个也就很简单了。这根本不是如何去做的问题，而是想不想去做的问题，是个态度问题。态度决定得到的友情。这里面也只有一个问题，对方是什么态度呢？会不会对方没有抱着同样的态度，两人之间的态度不对等呢？人连自己的内心都不见得搞清楚，还要费劲心思去研究对方的内心态度，那不是太复杂了？所以，直接从最简单的着手，把自己态度摆好就完了，对所有人保持真心，会自然而然发现同样保持真心的人，也自然而然发现不那么可爱的人。</p>

<h2>Super Junior</h2>

<p>话说第一次听说这个组合还是大学时从我妹口中，直接无视掉了。当时对于韩国偶像团体的理解就是蹦蹦跳跳吼一吼，下面尖叫一片。没有关注自然没有了解，其实后来随着眼界开阔和年龄增长，以前的很多无理由偏见都消失了，而且进一步去分析之前那些偏见，还觉得好幼稚。</p>

<h3>韩国演艺圈</h3>

<p>回到韩国偶像团体上，其实一直听闻韩国艺人很辛苦，不仅要面对相对较小的市场容量和激烈的竞争，还要时不时被经纪公司欺负来欺负去。和我们大天朝的明星们相比，简直天上地下。以前上学的时候了解到这个真相竟然还有些莫名其妙的天之上国的优越感，后来可笑的优越感消失了，换之而来的是对韩国艺人的同情和尊敬。其实简单的道理，和市场经济一样，竞争激烈才会有创新和闪光点。</p>

<h3>综艺节目</h3>

<p>韩国的综艺节目真是让人看花眼，多种多样，各种重口味轻口味。。我觉得韩国艺人的终身使命就是在眼花缭乱的综艺节目里搞笑了。。综艺节目有一点好，那就是你可以更近距离的了解一个明星在现实生活中的样子，而不是重重包装之后的宣传画，感觉更真实一点。</p>

<h3>SJ</h3>

<p>我得承认看「人体探险队」之前对于这个组合的了解还是停留在蹦蹦跳跳下面尖叫一片的程度。。。当然心里面已然没有偏见排斥什么的了。</p>

<p>这个系列综艺节目是2007年开始的，想那时我还在大二，在电脑旁边跟不知道的路人血拼魔兽世界竞技场呢。。那么这时的SJ成员们也是年轻的一塌糊涂，就像刚踏入社会的人们一样，从外表到心里都是那么稚嫩和纯粹。我赶脚这是最美的时光，每个人虽然都踌躇满志，但是依然坦诚相待，而且缘分让他们在这个时候走在一起，不<del><code>搞基</code></del>建立友谊还能干什么？</p>

<h3>李赫宰</h3>

<p>好吧，其实主角是他。第一次在节目里看到他，感觉小孩一只，就是善良纯真全部写在了脸上。这在后面的节目里也有所体现，比如</p>

<ol>
<li>几乎每集都会被其他成员欺负来欺负去，被各种姿势脱裤子，活活就是<code>吃饭睡觉打豆豆</code>里的豆豆，哈哈哈哈。当然这些成员不是真正欺负他，而是他脾气好，对朋友们容忍度高，大家自然可以放心的和他开各种玩笑，我也喜欢这种朋友之间的气氛，什么玩笑都可以开。</li>
<li>第一次担当主持人时的紧张和认真。紧张全写在脸上了，还经常说错词，这个时候一定也会被其他成员和主持人吐槽开玩笑。然后虽然是个助理主持，但可以看得出来还是很认真的在做的，没有任何做作和掩饰，还带有几分搞笑。</li>
<li>非常搞笑，还是很能活跃气氛的（其实有时候是被动的，尤其是大家欺负他的时候）</li>
</ol>


<p>其实最重要的在于收集眼泪那一集，所有人联合起来在他面前演戏，试图让他流出伤心眼泪。不得不说，这些人真会演，哈哈哈哈。恩恩，当然最后成功了，而且也更加展示出他对这些朋友的态度来，也是宁愿自己损失一点，也要让朋友们更加开心，朋友利益高于自己。我记得最深的就是胖胖故意质问他（演戏）对自己不够关心，他说自己宁愿戏份少点也要增加胖胖的。这一句话其实就已经完全说明了他的内心，他的态度，他为之追逐的东西。所以在被质疑这个的时候，他会瞬间泪奔，这等于是质疑他的人生他的世界，这是最大的委屈。不过还好是演戏。</p>

<p>真心诚意待人自然也能收获真心诚意，收获开心。所以可想而知，他的人生才刚刚开始，<strong>等待他的是幸福，还有幸福</strong>，哈哈哈！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[十年感悟]]></title>
    <link href="http://dragoncz.github.com/blog/2013/06/05/shi-nian-gan-wu/"/>
    <updated>2013-06-05T00:04:00+08:00</updated>
    <id>http://dragoncz.github.com/blog/2013/06/05/shi-nian-gan-wu</id>
    <content type="html"><![CDATA[<p>最近断断续续听了一个<code>90后</code>10年的感情经历，感慨万千，遂有此文。</p>

<p>其实不是第一次听别人讲情感经历了，不过以前听到的没一个像这样精彩详细，深入我心。每每听到，都身临其境，向往感油然而生。</p>

<p>乍说起来，不知从何说起。听故事期间任何一个点上我都可以滔滔不绝，可是都听完了，回想起来，每一个小感悟其实都已融入我心，不知该说啥了。所以只能以一段感情的时间轴为线，尝试着重新组织一下，把自己想法晒一晒。</p>

<h2>起初</h2>

<blockquote><p>都说一段恋爱刚刚开始是最美好的。对的时间遇到对的人，你情我愿，这真堪比地球出现生命的几率。不过奇妙的是，地球上不但出现了各式各样的生命，爱情故事也在历历重演。</p></blockquote>

<!-- more -->


<p>人们总是为了各种目的谈恋爱，也愿意为了恋爱找各种理由，说服别人，说服自己。我觉得恋爱的火苗没那么复杂，就最纯粹简单的俩字：喜欢。</p>

<p>不是因为寂寞空虚，不是因为伤心难过，不是因为有个交待。</p>

<p>掺杂了越多的东西，感情的基础就越不牢固。所以起初很重要，可是越简单的东西却越容易被忽略。人们忙乎于计算生辰八字，地位年薪，皮肤白黑的时候，忘了问自己，<em>除了这些，是不是就真的简简单单的喜欢呢？</em></p>

<blockquote><p>简单意味着有力，一股可以让你改变让你成长的力。再粗心的人也会为了喜欢的人拿出一丝细心，再彪悍的性格也能拿出一丝温柔。</p></blockquote>

<h3>简单之下的复杂</h3>

<p>那么啥才算喜欢呢，怎样才能喜欢呢，真是既简单又复杂。我觉得就是自然而然的，不是为了喜欢而喜欢。探究下自己深层的目的，是为了填补空虚，安慰内心还是堵别人嘴？不应该是这样的，应该是原始的想在一起的冲动，我就是喜欢的那种自信，我就愿意的那种不顾一切。</p>

<h2>建立</h2>

<p>终于，暧昧变成恋爱，喜欢变成爱情。这是最美的时光，美好回忆的聚集地。</p>

<p>这没什么好说的，这种快乐只有经历过的人才能感受。</p>

<h2>经营</h2>

<blockquote><p>热度退却，开始逐渐蒙蔽不了当初的忧虑或者逐渐浮出水面的真相，开始担忧未来。如果爱情起初时的基础不稳固，那么这一段定会荆棘满布。原来对方没想象的好，原来他（她）还有这些毛病，原来我不是那么喜欢他，原来原来～</p></blockquote>

<p>即使简简单单相互喜欢的那种，也会遇到挫折。有些挫折是在一起前就注定了的，有一些真的是从未想到过担心过的。</p>

<p>面对这个，貌似只有两个选择，要么放弃，要么走下去。不过大家其实都选择了边走边看。这样能摸透对方，也能摸透自己。可是这样造成了很多悲剧，有些人一段恋爱一谈就七八年最后还没结果，我觉得这是<strong>对自己<code>不负责任</code>，这是<code>耍流氓</code>。</strong></p>

<p>那么咋地经营呢？</p>

<p>我感觉这是个心态问题，就看意愿了，愿意克服还是不愿意，有些问题愿不愿意坦然接受并且面对，其实也挺简单。而且这段路不是独行，是两人一起走的。如果大家都愿意而且能够为之努力，想要走下去，那么没啥难的。一个巴掌拍不响，俩人意愿有分歧，那估计也走不到一块儿去。</p>

<h2>终了</h2>

<blockquote><p>大部分故事还是到了这个结局，人们总是一遍又一遍地犯着同样地错。有些因为是起初就注定了的，有些又是随机事件没处理好，所以说恋爱很复杂，就像复杂的人生。</p></blockquote>

<p>对付复杂就得用<code>简单</code>，对付不确定的东西就要用<code>信仰</code>。我觉得感情应该也一样，需要那股简单原始的东西。不变应万变应该也是这个道理。</p>

<p>而且，真的，心态决定一切。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[我有话要说之包容]]></title>
    <link href="http://dragoncz.github.com/blog/2013/01/19/wo-you-hua-yao-shuo-zhi-bao-rong/"/>
    <updated>2013-01-19T15:24:00+08:00</updated>
    <id>http://dragoncz.github.com/blog/2013/01/19/wo-you-hua-yao-shuo-zhi-bao-rong</id>
    <content type="html"><![CDATA[<p>留学回来的半年，看到了许多事，有了很多新想法。大部分是价值观冲突形成的，当然，这无关国家，无关社会，只是限于我个人的小圈子里。</p>

<h2>他人眼中的留学生</h2>

<p>其实，这是个「期望与包容」的问题，说<code>留学生</code>只是借用了留学生这个热门词，另外我本身是留学生，能够站在这个群体里亲身体会。这个问题实际上存在很久了，比如以前的大学生，再比如，找你修电脑，修手机，修插线板，修路由器，修。。。这类问题，你懂的。</p>

<p>如果你读到了这篇博客，相信你对后者深有体会。实际上，任何人都肯定能在自己生活里找到共鸣，因为这问题实在太普遍了。</p>

<!-- more -->


<p>先看看下面这些对话：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  “你出国这么多年，英语肯定很厉害喽！”  
</span><span class='line'>  “你出国这么多年，肯定什么都见过喽！”  
</span><span class='line'>  “你出国这么多年，肯定懂得怎么一天内玩遍伦敦喽！”  
</span><span class='line'>  ...    </span></code></pre></td></tr></table></div></figure>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  “你出国这么多年，怎么连这个单词都不认识？！”  
</span><span class='line'>  “你出国这么多年，怎么连贝克汉姆都没见过？！”  
</span><span class='line'>  “你出国这么多年，怎么连伦敦景点都说不全？！”  
</span><span class='line'>  ...  </span></code></pre></td></tr></table></div></figure>


<p>这一点都不夸张，都是经常发生的对话，或者人们对留学生的某种「共识」。</p>

<p>为了帮助你准确无误的领会其中的奥妙，我再写另外几个<code>耳熟能详</code>，<code>喜闻乐见</code>的对话：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  “你学了这么多年电脑，怎么连这点小毛病都修不好？！”  
</span><span class='line'>  “你学了这么多年电脑，怎么连个网站都写不了？！”  
</span><span class='line'>  “你学了这么多年电脑，怎么连PS都不会用？！”  
</span><span class='line'>  ...  </span></code></pre></td></tr></table></div></figure>


<p>可能你既不是留学生，也不是学电脑的，那我假设你是学金融的。请参考以下大家<code>津津乐道</code>的话题：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  “你金融学了这么多年，怎么连个利息都算不出来？！”  
</span><span class='line'>  “你金融学了这么多年，怎么连这个股票都不知道？！”  
</span><span class='line'>  “你金融学了这么多年，怎么连个报表都看不懂？！”  
</span><span class='line'>  ...  </span></code></pre></td></tr></table></div></figure>


<p>其它专业的请自行脑补，你总能在你脑子里找到这样那样的精彩对话。</p>

<h2>问题出在哪？</h2>

<p>问题出在你我，我们对于陌生未知的领域 u(nknown) ，通过各种途径看到了解了一些方面 k(nown) ，我们根据这些仅有的印象却想当然地建立了一套评价体系：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>任何或绝大多数 u 都具备 k 这些特性
</span><span class='line'>具有 k 这些特性的肯定都是或绝大多数都是 u
</span><span class='line'>某种程度上，u ⇌ k</span></code></pre></td></tr></table></div></figure>


<p>我们有意识或没意识地就这么想当然的认为了，也许只有你被这些幼稚想法伤害的时候，你才能恍然大悟，才能想到你曾经伤害过的群众。</p>

<p>这种理论解释上面的那些对话，确实可以说得通，但是说得通不代表在理，不代表正确。</p>

<h2>包容</h2>

<p>人们缺乏一种包容心，一种对未知人和事的包容心。相反地是，人们对于这些未知反而期望过高，而当这种期望没有被满足，换来的不是包容，而经常是不理解，甚至鄙视、排斥，更甚至是一种“哈哈，你看你也不过如此嘛”的讥讽，继而满足自己虚荣心和背后的一丝自卑。</p>

<p>我们需要努力纠正的就是这种态度，需要培养的就是包容心。人非圣贤，人无完人。</p>

<h2>案例分析</h2>

<p>记得国内有个<a href="http://v.youku.com/v_show/id_XNDAwNDcyMDI0.html" title="优酷节目视频">垃圾节目</a>里，一个留学生去电视求职，且不说这类节目本身定位问题和主持人的傻逼程度，就说这个留学生因为「留学生」这个称呼，遭受到了在场所有人异常尖锐的怀疑，批评甚至人身攻击。我相信电视前的观众也有很大一部分持有和主持人一样的态度。现在仔细想一下，问题出在哪？</p>

<p>作为一个离开「祖国」一段时间的人，他被祖国人民<code>震惊</code>了，准确地说，他被现场观众和主持人和电视观众等所有人<code>暴菊</code>了，还暴出了血。</p>

<p>他没有想到，他不适应，他感到无所适从，感到三观崩坏，整个世界都在旋转。</p>

<p>要是我，我也晕倒。</p>

<p>当然亮点永远在最后，<strong>“同学，你是装得吧？”</strong></p>

<h2>后记</h2>

<p>本来打算写一篇博客，可是这话题太大，一篇写不玩，索性搞成系列。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Enterprise]]></title>
    <link href="http://dragoncz.github.com/blog/2012/12/10/enterprise/"/>
    <updated>2012-12-10T17:29:00+08:00</updated>
    <id>http://dragoncz.github.com/blog/2012/12/10/enterprise</id>
    <content type="html"><![CDATA[<p><code>Enterprise</code>, 进取号。也就是 <a href="http://en.wikipedia.org/wiki/Star_Trek" title="Star Trek Wikipedia"><code>Star Trek</code></a> 「星际迷航」里的 <a href="http://en.wikipedia.org/wiki/Starship_Enterprise" title="Starship: Enterprise">USS Enterprise</a>.</p>

<p><img src="http://upload.wikimedia.org/wikipedia/en/1/1a/USS_Enterprise_%28NCC-1701%29%2C_ENT1231.jpg" title="USS Enterprise (NCC-1701)" alt="Starship Enterprise" /></p>

<p>最近把星际迷航翻出来看了看，感叹上世纪80年代的电影也能满足科幻迷的胃口。尤其是<a href="http://en.wikipedia.org/wiki/Star_Trek:_The_Motion_Picture" title="Star Trek: The Motion Picture">第一集</a>，讲一个在漫漫宇宙飘荡过程中产生了自我意识的卫星，&#8221;a living machine&#8221;, 不远万里来找寻它的创造者。是啊，生命的定义也许并不是那么狭隘，一个由蜜蜂组成的蜂群，整体来看具有自己的意识，那么这个整体不也是生命么？那么，一个由很多星球组成的星系呢？宇宙本身呢？</p>

<!-- more -->


<p>如果宇宙本身是个生命系统，那么人类又是个什么样的存在呢？说到这里，我不禁想到了这个图：</p>

<p><img src="http://d.pr/i/NwHd+" title="Ouroboros" alt="Ouroboros" /></p>

<p>这里又能联想到，无限大和无限小之间的距离，是不是在某一处，也像这样衔接在一起了呢，宇宙的边缘。。。
科幻电影令人着迷的地方就是这个，引发你自己的想象，太有趣了。</p>

<h2>Enterprise</h2>

<p>说到 <code>Enterprise</code>，不由自主会想到现如今更广泛被熟知的定义：<strong>企业</strong>。企业是啥呢？</p>

<blockquote><p>A business (also known as enterprise or firm) is an organization engaged in the trade of goods, services, or both to consumers. <a href="http://en.wikipedia.org/wiki/Business" title="Wikipedia: Business">Wikipedia</a></p></blockquote>

<p>我就在想啊，如果把经济比作一个互联网，那么一个企业可能就是里面的某一个路由，资源也就是里面的数据，数据在互联网里流动，总会经过一个个的路由。这样想的话，资源从企业经过就是资源重新整合分配。在经济的世界里，还有个重要的概念是价值。资源的流动产生价值，在企业里重整分配也要产生价值。</p>

<h3>路由</h3>

<p>路由是可以决定数据的走向的，可以丢弃、转移数据。试想一下，如果一个路由器，总是把发往这里的所有数据全部丢弃（吞掉），那毫无疑问它作为一个路由器已经失去了存在的意义，不遵守游戏规则必然会被规则抛弃，于是数据都不往这里走了，这个路由器只能抱着之前吞掉的数据逐渐消失了。</p>

<h3>企业</h3>

<p>经济世界何其相似啊，企业也好，团队也好，资源流向自己之后，想着全部收入囊中，无视客户，或者不顾虑周边其他企业，那么长远来与自己也是不好的。</p>

<h3>价值</h3>

<p>资源流动起来才能有价值，而要资源流动起来，那你就得输出资源，丰富这个生态圈。这当然还有量的问题，可是问题是好多好多企业连质还没搞定，还谈啥量啊。。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Update Octopress]]></title>
    <link href="http://dragoncz.github.com/blog/2012/12/08/update-octopress/"/>
    <updated>2012-12-08T00:18:00+08:00</updated>
    <id>http://dragoncz.github.com/blog/2012/12/08/update-octopress</id>
    <content type="html"><![CDATA[<p>最近一直在学习 iOS Programming，博客好久没更新了啊，再不更新荒废了。。。但是，作为不折腾会死星人，更新博客之前，先把 Blog Engine 更新了才对。</p>

<h1>Octopress</h1>

<p><a href="http://octopress.org" title="Octopress.org">Octopress</a> 不比 Wordpress 等动态引擎，是纯静态并且没有后台的，想点击 <code>Update</code> 按钮一键更新是不可能的，一切都要在终端里进行。当然，这样也会强迫你每次使用都学到新东西，尤其像我这样的新手。</p>

<p>由于 Octopress 本质上只是一个 <code>Generator</code>，生成器，根据你的博客源文件（像是文章，CSS，Javascript 等等各种资源）生成静态网页。那么更新 Octopress 实质上就是更新这个生成器，它一般存在与你自己的电脑或远程服务器上，这个和保存网站本身的服务器一般是两个不同的位置。</p>

<!-- more -->


<h2>Update</h2>

<p>根据 Octopress 官网的 <a href="http://octopress.org/docs/updating/">指示</a>，打开终端，进入你 Octopress 的目录，然后依次输入以下命令就可以更新了：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git pull octopress master     # Get the latest Octopress
</span><span class='line'>bundle install                # Keep gems updated
</span><span class='line'>rake update_source            # update the template's source
</span><span class='line'>rake update_style             # update the template's style</span></code></pre></td></tr></table></div></figure>


<p>解释一下，由于当时安装 Octopress 是使用的 <code>git clone</code> 命令，那么本地存在的 Octopress 自然可以使用 <code>git pull</code> 来获取最新版本。第一行命令就是获取 Octopress 最新版本并与本地 branch 合并。</p>

<p>如果你像我一样水，从来没对本地 git branch 进行过 <code>commit</code> 和 <code>push</code> 操作的话，以上命令是拯救不了你的，而且多半第一行会报错。俗话说，「亡羊补牢，犹未为晚」，在输入上述命令之前，先进行下 <code>commit</code> 和 <code>push</code>：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git add .
</span><span class='line'>git commit -m 'source files archive'
</span><span class='line'>git push origin source</span></code></pre></td></tr></table></div></figure>


<p>好了，现在再输入那四行命令就可以更新了。</p>

<h2>关于主题</h2>

<p>由于我之前安装了 <a href="http://zespia.tw/Octopress-Theme-Slash/" title="Slash for Octopress"><code>Slash</code></a> 这款主题，所以第三行和第四行的命令要稍微更改一下，不然主题会全乱了，如果你发现已经乱了，还是那句话，「亡羊补牢，犹未为晚」，再执行一边下面的命令就好了：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake update_source['slash']     # replace 'slash' with your theme name
</span><span class='line'>rake update_style['slash']      # replace 'slash' with your theme name</span></code></pre></td></tr></table></div></figure>


<h2>测试</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake preview</span></code></pre></td></tr></table></div></figure>


<p>然后打开浏览器，访问 <a href="http://127.0.0.1:4000">127.0.0.1:4000</a> 就可以看到效果了。看完效果别忘了回到终端 <code>Ctrl + C</code> 停止 Preview 进程。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Python for Humans]]></title>
    <link href="http://dragoncz.github.com/blog/2012/11/14/python-for-humans/"/>
    <updated>2012-11-14T16:09:00+08:00</updated>
    <id>http://dragoncz.github.com/blog/2012/11/14/python-for-humans</id>
    <content type="html"><![CDATA[<p>I like this quote:</p>

<blockquote><p>&#8220;There should be one -and preferably only one -obvious way to do it.&#8221;</p></blockquote>

<!-- more -->


<p>Original slide:</p>

<script async class="speakerdeck-embed" data-id="4f24d3a79a6510001f008836" data-ratio="1.33333333333333" src="http://dragoncz.github.com//speakerdeck.com/assets/embed.js"></script>


<p><a href="https://speakerdeck.com/kennethreitz/python-for-humans">Source</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[nvALT]]></title>
    <link href="http://dragoncz.github.com/blog/2012/05/06/nvalt/"/>
    <updated>2012-05-06T18:53:00+08:00</updated>
    <id>http://dragoncz.github.com/blog/2012/05/06/nvalt</id>
    <content type="html"><![CDATA[<p><a href="http://brettterpstra.com/project/nvalt/" title="nvALT 官网">nvALT</a> 和 <a href="http://evernote.com/" title="Evernote 官网">Evernote</a> 类似，是笔记类软件，数字笔记的好处就是，代替了传统的笔记本和笔，同时也方便检索和管理。想想平时遇到这些时候：</p>

<ul>
<li>看一篇文章，激发了你的一些思考，但都是片段式的，很零散</li>
<li>使用一些软件或者设备的时候，有了一些产品灵感，或者想法，这些宝贵的脑电波稍纵即逝</li>
<li>看到一个好段子，想记录下来</li>
</ul>


<p>一键呼出你的 nvALT，键盘飞起吧。</p>

<h1>Notational Velocity</h1>

<p>&#8220;nvALT&#8221; 中的 &#8220;nv&#8221; 就是指 <a href="http://notational.net/" title="Notational Velocity Official Website">Notational Velocity</a>, 相比其他同类软件，它的精髓就是 <code>简单</code>，<code>键盘操作</code>，尤其相对于 Evernote 的复杂和臃肿。界面干净的除了关闭最小化什么的按钮外，一个多余的按钮都没有。如果你也像我一样喜欢键盘的高效率和简单高效的界面的话，那这个就是为你设计的笔记软件。当然，一台 Mac 是必须的：）</p>

<h2>nvALT</h2>

<p><a href="http://brettterpstra.com/project/nvalt/" title="Brett Terpstra">nvALT</a> 是 <a href="http://elasticthreads.tumblr.com/">Elastic Threads</a> (David Halter) 和 <a href="http://brettterpstra.com/">Brett Terpstra</a> 开发的 Notational Velocity 的一个 Fork，增加了很多功能，最吸引人的就是支持 <a href="http://daringfireball.net/projects/markdown/" title="markdown Official Website">markdown</a>，由于现在我基本所有的文字编辑都采用 markdown 格式了，把笔记也统一感觉很协调，另外也方便直接复制粘帖不是：）</p>

<!-- more -->


<h1>界面</h1>

<p><img src="http://f.cl.ly/items/0U0h362p3q3s3W34070T/Screen%20Shot%202012-05-06%20at%2018.51.58.png" title="nvALT UI" alt="nvALT UI" /></p>

<h1>使用</h1>

<h2>添加，编辑笔记</h2>

<p><img src="http://notational.net/images/notational-diagram.png" title="使用流程" alt="使用流程" /></p>

<p>使用起来及其简单，搜索框类似 Chrome 的地址栏，如果根据你输入的可以找到已有条目，那么就编辑已有条目；如果没找到匹配的，那么就按照当前关键词新建一个条目。就这么简单。当然，这个搜索框是全局搜索的，你条目里面的内容也会被检索。
nvALT 的每个笔记都支持 Tag，方便管理。</p>

<h2>保存和备份</h2>

<p>nvALT 默认采用单个数据库文件来保存笔记的，还提供单独文本文件，HTML 格式文件等的选项。需要注意的是，只有在默认采用数据库文件存储的时候，笔记才是被加密的，否则都是明文存储。但是单个文件存储也有它自己的优点，下面会提到。
编辑的时候不需要手动保存，它是实时自动保存的，永远不用担心丢失数据。另外它的设置和笔记保存路径可以更改，我们可以把它放在 Dropbox 上，实时备份。方法就是：</p>

<pre><code>"Cmd + ," 打开设置 -&gt; 'Notes' 标签 -&gt; 'Read notes from folder:' 选择你的 Dropbox 文件夹
</code></pre>

<h2>Simplenote</h2>

<p>nvALT 支持和 <a href="http://simplenoteapp.com/" title="Simplenote Official Website">Simplenote</a> 服务同步，而 Simplenote 拥有网页客户端，Windows 客户端和 iOS 客户端，你可以在它的 <a href="http://simplenoteapp.com/downloads/" title="simplenote apps">download页面</a> 上看到，它还有各种 nvALT 之外的软件，插件支持，所以可以在所有设备上访问到你的笔记，只要有网。Simplenote 有免费和收费两种，一般免费的就够用了，收费的只是去掉广告和很少的功能增强，可是要按年付费，虽然不贵，但是不划算。</p>

<h1>技巧</h1>

<ul>
<li><code>Shift + Cmd + E</code> 可以打开外部文本编辑器编辑当前目录，这样你就可以使用自己喜爱的 markdown 编辑器编辑你的笔记了，比如 <a href="sublimetext.com/2" title="Sublime Text 2">Sublime Text 2</a> (跨平台) 和 <a href="http://mouapp.com/" title="mouapp">Mou</a> (Mac)
注意，这个只有在设置成保存单独文本文件的时候才可以设置，否则只能使用系统自带的 TextEdit 打开。</li>
<li><code>Ctrl + Cmd + P</code> 可以打开 markdown 预览。</li>
<li>可以设置全局热键来一键呼出 nvALT</li>
<li>在设置为按单个文本文件保存笔记的时候，可以用 Spotlight 或者 Alfred 之类的程序搜索到笔记，换句话说，和系统有更好的整合度。</li>
</ul>


<p>想法和点子不知什么时候就忽然闪现，如果不记录下来，它也会很快被忘记，所以，找到一个合适的笔记软件，养成一个记录的习惯，积累下来，肯定是个财富。</p>

<p><a href="http://abyss.designheresy.com/nvaltb/files/nvalt2.2b94.zip" title="nvALT 2.2b94">下载 nvALT 2.2 beta</a></p>

<p><a href="http://brettterpstra.com/project/nvalt/" title="Brett Terpstra">nvALT 作者网站</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Web and Layers]]></title>
    <link href="http://dragoncz.github.com/blog/2012/05/06/web-and-layers/"/>
    <updated>2012-05-06T17:58:00+08:00</updated>
    <id>http://dragoncz.github.com/blog/2012/05/06/web-and-layers</id>
    <content type="html"><![CDATA[<p>最近看到几篇文章，<a href="http://www.36kr.com/p/106076.html" title="Facebook 的开放世界">一篇提到</a> Facebook 正“试图成为所有应用的社交层，就像 Google 试图成为 Google 所有产品的社交层一样”。还有一篇提到，<a href="http://www.technologyreview.com/web/39653/" title="Dropbox: Founder Drew Houston Simplifies the Cloud">Dropbox 老大说</a>，Dropbox 不是一个简单的网盘，它的最终目标应该是成为“互联网的文件系统”，换句话说，Dropbox 想成为所有互联网应用的 <code>存储层</code>。</p>

<blockquote><p>&#8220;Over the next years you&#8217;re going to see that the value that comes out of Dropbox is more and more the stuff that other people build. Whether it&#8217;s your TV or your camera or the apps on your phone, we want to make it easy for anything that consumes or creates data to be able to plug in. What we&#8217;re really trying to build is the Internet&#8217;s file system.&#8221; <a href="http://www.technologyreview.com/web/39653/" title="Dropbox: Founder Drew Houston Simplifies the Cloud">Drew Houston</a></p></blockquote>

<!-- more -->


<p>我不禁想，以后的互联网应用或者说服务真的可以层次化，就像层次化的互联网七层协议，模块化的编程语言，正如这些复杂工程背后的哲学一样，互联网本身也可以模块化，层次化。</p>

<p>能够想到的几点好处：</p>

<ul>
<li>当开发应用的时候，你可以专注与你要提供的那部分功能，当你想提供社交功能和读存数据的时候，可以用社交层和存储层提供的功能。</li>
<li>那么你开发的这个应用可能就算做 <code>应用层</code>，就像网络协议的 Internet 服务，Email 服务归属于应用层一样。</li>
<li>每一层都有自己的功能和责任，可以和上层，下层交互。</li>
<li>每一层都可以释放一些不必要的顾虑，不必花费经历去研究其他层功能的细节，直接使用规范化的接口，比如 <code>API</code>。</li>
<li>互联网应用的开发效率带来提高</li>
</ul>


<p>其实想起来，这也算是各种 API 的进化概念，如果有一个整体的框架，或者说体系来约束互联网应用，肯定可以带来好处，说不定还能解决让人苦恼的客户需求问题。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[跨专业学习]]></title>
    <link href="http://dragoncz.github.com/blog/2012/04/18/kua-zhuan-ye-xue-xi/"/>
    <updated>2012-04-18T02:03:00+08:00</updated>
    <id>http://dragoncz.github.com/blog/2012/04/18/kua-zhuan-ye-xue-xi</id>
    <content type="html"><![CDATA[<p>最近一直在从头学习<code>HTML</code>, 大脑很久没这么长时间运转了. 今天先是看了N久代码, 然后 <strong>Happy</strong> 的去给水二看论文资料. 话说环境学真是抽象啊, 好多词看不懂不说, 他们老师的 PPT 真是跳跃性的, 上一页和下一页恍如隔世&#8230;</p>

<!-- more -->


<h1>学到的东西</h1>

<ul>
<li><h3><span id="Sustainable Consumption">Sustainable Consumption</span></h3>

<blockquote><p>&#8220;the use of services and related products which respond to basic needs and bring a better quality of life while minimizing the use of natural resources and toxic materials as well as emissions of waste and pollutants over the life cycle of the service or product so as not to jeopardize the needs of future generations.&#8221; (via <a href="http://en.wikipedia.org/wiki/Sustainable_consumption#The_Oslo_Definition" title="Wikipedia">Wiki</a>)</p></blockquote>

<p>个人理解: 就是节省资源的同时又可以保持(甚至提高)生活质量, 另外还有一个比较片面但是通俗的解释, 就是要理性消费, 低碳环保. 这是我这个外行人的理解.</p></li>
<li><h3>Science and Technology Studies (STS)</h3>

<blockquote><p>&#8220;STS is the study of how social, political, and cultural values affect scientific research and technological innovation, and how these, in turn, affect society, politics and culture. STS scholars are interested in a variety of problems including the relationships between scientific and technological innovations and society, and the directions and risks of science and technology&#8221; (via <a href="http://en.wikipedia.org/wiki/Sustainable_consumption#The_Oslo_Definition" title="Wikipedia">Wiki</a>)</p></blockquote>

<p>个人理解: 应该是把科技和人结合在一起, 使我们的生活更美妙的同时, 促成人们改变一些生活习惯. 具体到 <a href="#Sustainable Consumption"><code>Sustainable Consumption</code></a> 领域, 那就是科技产品在让人们使用后, 可以潜移默化的让人们的生活更环保. 比如无纸化办公, 电子书.</p></li>
</ul>


<p>好了, 太困了, 睡觉了.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GitHub for Mac and SSH keys]]></title>
    <link href="http://dragoncz.github.com/blog/2012/04/12/github-for-mac-and-ssh-keys/"/>
    <updated>2012-04-12T03:13:00+08:00</updated>
    <id>http://dragoncz.github.com/blog/2012/04/12/github-for-mac-and-ssh-keys</id>
    <content type="html"><![CDATA[<p>折腾 Octopress 的时候安装了 Git, 之前还安装过 GitHub for Mac, 然后创建 SSH Keys 的时候就发现 <code>~/.ssh/</code>目录下面有</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Zhens-MacBook-Pro:~ caozhen$ ls ~/.ssh/
</span><span class='line'>github_rsa                id_rsa
</span><span class='line'>github_rsa.pub            id_rsa.pub
</span><span class='line'>github_rsa.pub_bak-github known_hosts
</span><span class='line'>github_rsa_bak-github</span></code></pre></td></tr></table></div></figure>


<p><a href="http://help.github.com/mac-set-up-git/" title="Help.GitHub - Set Up Git">Github Help</a> 上面的指导文章让生成使用的是 <code>id_rsa</code> 和 <code>id_rsa.pub</code> 这个 key pair, 那么 <code>github_rsa</code> 和 <code>github_rsa.pub</code> 是做什么的?</p>

<!-- more -->


<p>
经过猜测和 Google 大神的指引, 确定是 GitHub for Mac 傻瓜化的为用户创建的. 话说干嘛不创建个名称一致的&#8230; 那么我连接 GitHub 的时候到底是用的哪一个 key pair 呢? 可以用下列命令确定:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ssh -vT git@github.com</span></code></pre></td></tr></table></div></figure>


<p>在输出里面找到类似</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>...
</span><span class='line'>debug1: Offering RSA public key: /Users/caozhen/.ssh/github_rsa
</span><span class='line'>...</span></code></pre></td></tr></table></div></figure>


<p>说明现在使用的是 <code>github_rsa</code> 这个 key.</p>

<h1>问题解决</h1>

<p>现在根据 stackoverflow 上的<a href="http://stackoverflow.com/questions/7968656/why-is-a-cap-deploy-giving-permission-denied-publickey" title="stackoverflow">这篇文章</a>切换到默认的 <code>id_rsa</code>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ssh-add -D</span></code></pre></td></tr></table></div></figure>


<p>这个命令的作用是清除 <code>ssh-agent</code> 的缓存, 这样就不会优先使用 <code>github_rsa</code> 了.</p>

<h1>后记</h1>

<p>写完博客才想到, 如果一直默认使用 <code>github_rsa</code> 这个 key 的话, 其它 ssh 服务也会出现问题, 因为我的 VPS 也是使用的 <code>id_rsa</code> 这个 key.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Scroll Reverser]]></title>
    <link href="http://dragoncz.github.com/blog/2012/04/11/scroll-reverser/"/>
    <updated>2012-04-11T11:40:00+08:00</updated>
    <id>http://dragoncz.github.com/blog/2012/04/11/scroll-reverser</id>
    <content type="html"><![CDATA[<p>OS X Lion 里最大的改动之一就是触摸板的滚动方向了，经过一段时间的适应，其实还是很符合触摸习惯，尤其是使用过各种 iDevice 之后。可是触摸板有时候还是代替不了鼠标，当我们必须用鼠标的时候，滚轮的反方向滚动会让你抓狂的。当然，通过一些设置，可以把新的滚动方式关掉，可是用回触摸板的时候又很不适应。</p>

<h1>目标</h1>

<ol>
<li>使用触摸板的时候应用新的滚动方式</li>
<li>使用鼠标的时候实用旧滚动方式</li>
<li>鼠标和触摸板和平共处</li>
</ol>


<!-- more -->


<h1>软件</h1>

<p><img src="http://cdn.downloads.pilotmoon.com/site/sr1_4shot.png" title="Scroll Reverser" alt="Scroll Reverser" /></p>

<p><a href="http://pilotmoon.com/scrollreverser/" title="点击访问主页"><strong>Scroll Reverser</strong></a>
<a href="http://cdn.downloads.pilotmoon.com/ScrollReverser-1.5.1.zip" title="点击直接下载"><strong>[下载]</strong></a></p>

<blockquote><p>On OS X Lion, use it to customise scrolling behaviour beyond what is possible in system preferences, for example to reverse the mouse but not the trackpad.</p></blockquote>

<h1>步骤</h1>

<ol>
<li>先在<code>系统偏好</code>里打开新式滚动<br/>
<img src="http://f.cl.ly/items/2u1i16110f0X2z1b3I1x/Screen%20Shot%202012-04-11%20at%2009.48.42.png" title="System Preference" alt="System Preference" /></li>
<li>在<code>Scroll Reverser</code>的<code>Preferences</code>里去掉

<ul>
<li>Reverse Horizontal</li>
<li>Reverse Trackpad</li>
<li>Reverse Tablet</li>
</ul>
</li>
</ol>


<p><strong>完成!!</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[这是我的新博客]]></title>
    <link href="http://dragoncz.github.com/blog/2012/04/10/zhe-shi-wo-de-xin-bo-ke/"/>
    <updated>2012-04-10T20:10:00+08:00</updated>
    <id>http://dragoncz.github.com/blog/2012/04/10/zhe-shi-wo-de-xin-bo-ke</id>
    <content type="html"><![CDATA[<p>终于搞定了 <a href="http://octopress.org" title="Octopress">Octopress</a> 和 <a href="http://github.com" title="github">Github</a>.</p>

<p>学到了很多东西，包括：</p>

<ul>
<li><p><a href="http://www.ruby-lang.org/en/" title="Ruby">Ruby</a></p>

<p>在 Mac OS X 下架设 <a href="http://rubyonrails.org/" title="Ruby on Rails">Ruby on Rails</a> 环境，目前使用 <a href="http://beginrescueend.com/" title="RVM">RVM</a> 安装了 1.9.2 &amp; 1.9.3. <a href="http://octopress.org" title="Octopress">Octopress</a> 需要 1.9.2 不过貌似可以更改。</p></li>
<li><p>Git</p>

<p><a href="http://github.com" title="github">github</a> 是个牛X的东西，里面有无数资源，有方便到爆的版本控制。</p></li>
<li><p><a href="http://en.wikipedia.org/wiki/Markdown" title="Wikipedia for Markdown">Markdown</a></p>

<p>从现在开始，所有的博客都使用 <a href="http://en.wikipedia.org/wiki/Markdown" title="Wikipedia for Markdown">Markdown</a> 格式编写，编辑工具我用的是 <a href="http://www.sublimetext.com/2" title="Awesome editor for coders">Sublime Text 2</a> 编辑器</p></li>
</ul>


<p>现在我要多学学东西，多写写 Blog, 这些东西还是用的多了才能学会。</p>
]]></content>
  </entry>
  
</feed>
